Goal:
	- Describe and draw structure of LinkedList
	- Describe an advantage of LinkedList over ArrayList

How long does it take to add on element to front of Array?
	- O(n) because we need to push other elements down to insert element at index 0
	- Functional, but not efficient

Doubly Linked List:
	- Nodes have reference to prev, reference to next, and data
	- Store reference of head of list and tail of list

LinkedList have two classes:
	1. Node class containing data, ref to next, and ref to prev
	2. LinkedList class has head and tail mainly and size property

Sentinel Nodes:
	- Don't store to any data; will only be head and tail of list

How long does it take to get an element at particular index in Array?
	- O(1) because assigned

How long does it take to get data at particular node in LinkedList?
	- O(n) because only access to head and tail of list

Why Array over List?
	- Random access

Array faster to read
List faster to write

Merge-sort on large objects
