Stack: abstract data type (LIFO) that can be implemented with either an array or linked list
	e.g. Stack of books
	- Push(key): adds key to collection
	- Key Top(): returns most recently-added key
	- Key Pop(): removes and returns most recently-added key
	- Boolean Empty(): any elements?
	- O(1) for above operations

Practical Uses:
	- Balanced brackets
Stack stack
for char in str:
	if char in ['(', '[']:
		stack.Push(char)
	else:
		if stack.Empty(): return False
		top <- stack.Pop()
		if (top = '[' and char != ']') or
		(top = '(' and char != ')'):
			return False
return stack.Empty()

Limitation of Array:
	- Max array size
	- Potentially wasted space

Implementation with Linked List:
	- Don't need to worry about size
